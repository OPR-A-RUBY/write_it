system('clear') # Linux
------------------------------------------------------------------------
puts "#{} #{}"
------------------------------------------------------------------------
puts "#{} #{} #{} #{} #{}"
------------------------------------------------------------------------
print 'Enter A: '
a = gets.chomp
------------------------------------------------------------------------
a = gets.to_i
------------------------------------------------------------------------
b = gets.strip
------------------------------------------------------------------------
while 2 * 2 == 4 do

end
------------------------------------------------------------------------
loop do
	break if a == 5 
end
------------------------------------------------------------------------
exit if a == '' && b == '' || c == ''	# from program
------------------------------------------------------------------------
return if a == '' && b == '' || c == '' # from loop-do
------------------------------------------------------------------------
if a == '+' 
	puts "#{} #{}"
else
	puts "#{} #{}"
end
------------------------------------------------------------------------
if a == '+' 
	rezult = a + b

elsif a == '-'
	rezult = a - b

elsif a == '*'		
	rezult = a * b
	
elsif a == '/'
	rezult = a / b

else
	puts 'Bad action'
	
end
------------------------------------------------------------------------
Для обучения:
> hh = {'sea'=>65, 'food'=>25, 'age'=>50, 12=>'home', :fish=>true}
------------------------------------------------------------------------
hh = {''=>, ''=>, ''=>, ''=>, ''=>, ''=>, ''=>,
      ''=>, ''=>, ''=>, ''=>, ''=>, ''=>, ''=>, 
      ''=>, ''=>, ''=>, ''=>, ''=>, ''=>, ''=>}
------------------------------------------------------------------------
class Cat < Animal
  attr_reader :alfa
  attr_accessor :betta
  def initialize options
    super 'cat'
    @name = options[:name]
  end
  def say
  end
end
------------------------------------------------------------------------
arr.each do |item|
end
------------------------------------------------------------------------
arr.each_with_index do |item, i|
end
------------------------------------------------------------------------
hash.keys.each do |key|
  value = hash[key]	
end
------------------------------------------------------------------------
hash.each do |key, value|
  puts "#{key} #{value}"
end
------------------------------------------------------------------------
input = File.open "in.txt", "r"
while (line = input.gets)
	line.strip!
end
input.close
------------------------------------------------------------------------
output = File.open "out.txt", "w"
output.write "Something \n"
output.close
------------------------------------------------------------------------
require 'net/http'      
require 'uri'
------------------------------------------------------------------------
uri = URI.parse 'http://192.168.0.1/' 
response = Net::HTTP.post_form(uri, :login => 'adm', :password => '01').
------------------------------------------------------------------------
uri_var = URI.parse 'http://rubyschool.us/router'
response = Net::HTTP.get uri_var
------------------------------------------------------------------------
response = Net::HTTP.get 'rubyschool.us', '/router'
------------------------------------------------------------------------
class Air
	attr_reader :a
	attr_writer :b
	attr_accessor :c
	def initialize par1, par2, ...
		@a = par1
		@b = par2
		@arr = [ ... ]
		@hh = { ... }
	end
	def fly
	end
end	
------------------------------------------------------------------------
	puts $global_var
	puts CONSTANT
	puts @@class_var
	puts @instance_var
	puts local_var
------------------------------------------------------------------------			
x = lambda { |a| ... }
------------------------------------------------------------------------
def me_line
	puts "="*30			            	# Линия из 30 знаков '='
end
------------------------------------------------------------------------
(1..10).each { |x| puts x }
------------------------------------------------------------------------
('10a'..'20s').each { |x| puts x }
------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------

------------------------------------------------------------------------
